# Generated from CrawLang.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,45,322,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,
        3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,1,6,1,
        6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,
        10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,
        12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,13,1,
        13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,15,1,15,1,15,1,15,1,
        15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,16,1,
        16,1,16,1,16,1,16,1,17,4,17,198,8,17,11,17,12,17,199,1,17,1,17,1,
        18,1,18,1,18,1,18,5,18,208,8,18,10,18,12,18,211,9,18,1,18,1,18,1,
        18,1,18,1,18,1,19,1,19,1,19,1,19,5,19,222,8,19,10,19,12,19,225,9,
        19,1,19,1,19,1,19,1,19,1,19,1,20,1,20,5,20,234,8,20,10,20,12,20,
        237,9,20,1,21,4,21,240,8,21,11,21,12,21,241,1,22,1,22,1,22,1,22,
        1,23,4,23,249,8,23,11,23,12,23,250,1,23,1,23,4,23,255,8,23,11,23,
        12,23,256,3,23,259,8,23,1,24,1,24,1,24,5,24,264,8,24,10,24,12,24,
        267,9,24,1,24,1,24,1,25,1,25,1,25,1,25,3,25,275,8,25,1,26,1,26,1,
        27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,1,32,1,32,1,33,1,
        33,1,34,1,34,1,35,1,35,1,36,1,36,1,37,1,37,1,38,1,38,1,38,1,39,1,
        39,1,39,1,40,1,40,1,41,1,41,1,42,1,42,1,42,1,43,1,43,1,43,1,44,1,
        44,1,44,1,45,1,45,1,45,3,209,223,265,0,46,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,0,53,26,55,27,
        57,28,59,29,61,30,63,31,65,32,67,33,69,34,71,35,73,36,75,37,77,38,
        79,39,81,40,83,41,85,42,87,43,89,44,91,45,1,0,5,3,0,9,10,13,13,32,
        32,2,0,65,90,97,122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,1,0,46,
        46,331,0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,
        0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,
        0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,
        0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,
        0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,
        0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,
        0,0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,
        0,0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,
        0,0,83,1,0,0,0,0,85,1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,
        0,1,93,1,0,0,0,3,98,1,0,0,0,5,103,1,0,0,0,7,107,1,0,0,0,9,113,1,
        0,0,0,11,116,1,0,0,0,13,121,1,0,0,0,15,125,1,0,0,0,17,132,1,0,0,
        0,19,136,1,0,0,0,21,140,1,0,0,0,23,143,1,0,0,0,25,149,1,0,0,0,27,
        165,1,0,0,0,29,170,1,0,0,0,31,175,1,0,0,0,33,182,1,0,0,0,35,197,
        1,0,0,0,37,203,1,0,0,0,39,217,1,0,0,0,41,231,1,0,0,0,43,239,1,0,
        0,0,45,243,1,0,0,0,47,248,1,0,0,0,49,260,1,0,0,0,51,274,1,0,0,0,
        53,276,1,0,0,0,55,278,1,0,0,0,57,280,1,0,0,0,59,282,1,0,0,0,61,284,
        1,0,0,0,63,286,1,0,0,0,65,288,1,0,0,0,67,290,1,0,0,0,69,292,1,0,
        0,0,71,294,1,0,0,0,73,296,1,0,0,0,75,298,1,0,0,0,77,300,1,0,0,0,
        79,303,1,0,0,0,81,306,1,0,0,0,83,308,1,0,0,0,85,310,1,0,0,0,87,313,
        1,0,0,0,89,316,1,0,0,0,91,319,1,0,0,0,93,94,5,109,0,0,94,95,5,97,
        0,0,95,96,5,105,0,0,96,97,5,110,0,0,97,2,1,0,0,0,98,99,5,99,0,0,
        99,100,5,104,0,0,100,101,5,97,0,0,101,102,5,114,0,0,102,4,1,0,0,
        0,103,104,5,105,0,0,104,105,5,110,0,0,105,106,5,116,0,0,106,6,1,
        0,0,0,107,108,5,102,0,0,108,109,5,108,0,0,109,110,5,111,0,0,110,
        111,5,97,0,0,111,112,5,116,0,0,112,8,1,0,0,0,113,114,5,105,0,0,114,
        115,5,102,0,0,115,10,1,0,0,0,116,117,5,101,0,0,117,118,5,108,0,0,
        118,119,5,115,0,0,119,120,5,101,0,0,120,12,1,0,0,0,121,122,5,102,
        0,0,122,123,5,111,0,0,123,124,5,114,0,0,124,14,1,0,0,0,125,126,5,
        114,0,0,126,127,5,101,0,0,127,128,5,116,0,0,128,129,5,117,0,0,129,
        130,5,114,0,0,130,131,5,110,0,0,131,16,1,0,0,0,132,133,5,110,0,0,
        133,134,5,111,0,0,134,135,5,116,0,0,135,18,1,0,0,0,136,137,5,97,
        0,0,137,138,5,110,0,0,138,139,5,100,0,0,139,20,1,0,0,0,140,141,5,
        111,0,0,141,142,5,114,0,0,142,22,1,0,0,0,143,144,5,112,0,0,144,145,
        5,114,0,0,145,146,5,105,0,0,146,147,5,110,0,0,147,148,5,116,0,0,
        148,24,1,0,0,0,149,150,5,112,0,0,150,151,5,114,0,0,151,152,5,105,
        0,0,152,153,5,110,0,0,153,154,5,116,0,0,154,155,5,95,0,0,155,156,
        5,97,0,0,156,157,5,108,0,0,157,158,5,108,0,0,158,159,5,95,0,0,159,
        160,5,115,0,0,160,161,5,116,0,0,161,162,5,97,0,0,162,163,5,116,0,
        0,163,164,5,115,0,0,164,26,1,0,0,0,165,166,5,115,0,0,166,167,5,105,
        0,0,167,168,5,116,0,0,168,169,5,101,0,0,169,28,1,0,0,0,170,171,5,
        110,0,0,171,172,5,101,0,0,172,173,5,120,0,0,173,174,5,116,0,0,174,
        30,1,0,0,0,175,176,5,100,0,0,176,177,5,111,0,0,177,178,5,109,0,0,
        178,179,5,97,0,0,179,180,5,105,0,0,180,181,5,110,0,0,181,32,1,0,
        0,0,182,183,5,104,0,0,183,184,5,97,0,0,184,185,5,115,0,0,185,186,
        5,95,0,0,186,187,5,115,0,0,187,188,5,117,0,0,188,189,5,98,0,0,189,
        190,5,100,0,0,190,191,5,111,0,0,191,192,5,109,0,0,192,193,5,97,0,
        0,193,194,5,105,0,0,194,195,5,110,0,0,195,34,1,0,0,0,196,198,7,0,
        0,0,197,196,1,0,0,0,198,199,1,0,0,0,199,197,1,0,0,0,199,200,1,0,
        0,0,200,201,1,0,0,0,201,202,6,17,0,0,202,36,1,0,0,0,203,204,5,47,
        0,0,204,205,5,42,0,0,205,209,1,0,0,0,206,208,9,0,0,0,207,206,1,0,
        0,0,208,211,1,0,0,0,209,210,1,0,0,0,209,207,1,0,0,0,210,212,1,0,
        0,0,211,209,1,0,0,0,212,213,5,42,0,0,213,214,5,47,0,0,214,215,1,
        0,0,0,215,216,6,18,0,0,216,38,1,0,0,0,217,218,5,47,0,0,218,219,5,
        47,0,0,219,223,1,0,0,0,220,222,9,0,0,0,221,220,1,0,0,0,222,225,1,
        0,0,0,223,224,1,0,0,0,223,221,1,0,0,0,224,226,1,0,0,0,225,223,1,
        0,0,0,226,227,5,13,0,0,227,228,5,10,0,0,228,229,1,0,0,0,229,230,
        6,19,0,0,230,40,1,0,0,0,231,235,7,1,0,0,232,234,7,2,0,0,233,232,
        1,0,0,0,234,237,1,0,0,0,235,233,1,0,0,0,235,236,1,0,0,0,236,42,1,
        0,0,0,237,235,1,0,0,0,238,240,7,3,0,0,239,238,1,0,0,0,240,241,1,
        0,0,0,241,239,1,0,0,0,241,242,1,0,0,0,242,44,1,0,0,0,243,244,5,39,
        0,0,244,245,7,1,0,0,245,246,5,39,0,0,246,46,1,0,0,0,247,249,7,3,
        0,0,248,247,1,0,0,0,249,250,1,0,0,0,250,248,1,0,0,0,250,251,1,0,
        0,0,251,258,1,0,0,0,252,254,7,4,0,0,253,255,7,3,0,0,254,253,1,0,
        0,0,255,256,1,0,0,0,256,254,1,0,0,0,256,257,1,0,0,0,257,259,1,0,
        0,0,258,252,1,0,0,0,258,259,1,0,0,0,259,48,1,0,0,0,260,265,5,34,
        0,0,261,264,3,51,25,0,262,264,9,0,0,0,263,261,1,0,0,0,263,262,1,
        0,0,0,264,267,1,0,0,0,265,266,1,0,0,0,265,263,1,0,0,0,266,268,1,
        0,0,0,267,265,1,0,0,0,268,269,5,34,0,0,269,50,1,0,0,0,270,271,5,
        92,0,0,271,275,5,34,0,0,272,273,5,92,0,0,273,275,5,92,0,0,274,270,
        1,0,0,0,274,272,1,0,0,0,275,52,1,0,0,0,276,277,5,44,0,0,277,54,1,
        0,0,0,278,279,5,59,0,0,279,56,1,0,0,0,280,281,5,40,0,0,281,58,1,
        0,0,0,282,283,5,41,0,0,283,60,1,0,0,0,284,285,5,123,0,0,285,62,1,
        0,0,0,286,287,5,125,0,0,287,64,1,0,0,0,288,289,5,43,0,0,289,66,1,
        0,0,0,290,291,5,45,0,0,291,68,1,0,0,0,292,293,5,42,0,0,293,70,1,
        0,0,0,294,295,5,47,0,0,295,72,1,0,0,0,296,297,5,37,0,0,297,74,1,
        0,0,0,298,299,5,61,0,0,299,76,1,0,0,0,300,301,5,61,0,0,301,302,5,
        61,0,0,302,78,1,0,0,0,303,304,5,33,0,0,304,305,5,61,0,0,305,80,1,
        0,0,0,306,307,5,60,0,0,307,82,1,0,0,0,308,309,5,62,0,0,309,84,1,
        0,0,0,310,311,5,60,0,0,311,312,5,61,0,0,312,86,1,0,0,0,313,314,5,
        62,0,0,314,315,5,61,0,0,315,88,1,0,0,0,316,317,5,60,0,0,317,318,
        5,60,0,0,318,90,1,0,0,0,319,320,5,62,0,0,320,321,5,62,0,0,321,92,
        1,0,0,0,12,0,199,209,223,235,241,250,256,258,263,265,274,1,0,1,0
    ]

class CrawLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    SPACE = 18
    COMMENT_BLOCK = 19
    COMMENT_LINE = 20
    VALID_VARIABLE_NAME = 21
    INT = 22
    CHAR = 23
    FLOAT = 24
    STRING = 25
    COMMA = 26
    SEMICOLON = 27
    LPAREN = 28
    RPAREN = 29
    LCURL = 30
    RCURL = 31
    PLUS = 32
    MINUS = 33
    TIMES = 34
    DIVIDE = 35
    MOD = 36
    ASSIGN = 37
    EQ = 38
    NEQ = 39
    LTHAN = 40
    GTHAN = 41
    LEQ = 42
    GEQ = 43
    SHIFT_LEFT = 44
    SHIFT_RIGHT = 45

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'main'", "'char'", "'int'", "'float'", "'if'", "'else'", "'for'", 
            "'return'", "'not'", "'and'", "'or'", "'print'", "'print_all_stats'", 
            "'site'", "'next'", "'domain'", "'has_subdomain'", "','", "';'", 
            "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'='", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'<<'", 
            "'>>'" ]

    symbolicNames = [ "<INVALID>",
            "SPACE", "COMMENT_BLOCK", "COMMENT_LINE", "VALID_VARIABLE_NAME", 
            "INT", "CHAR", "FLOAT", "STRING", "COMMA", "SEMICOLON", "LPAREN", 
            "RPAREN", "LCURL", "RCURL", "PLUS", "MINUS", "TIMES", "DIVIDE", 
            "MOD", "ASSIGN", "EQ", "NEQ", "LTHAN", "GTHAN", "LEQ", "GEQ", 
            "SHIFT_LEFT", "SHIFT_RIGHT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "SPACE", "COMMENT_BLOCK", "COMMENT_LINE", 
                  "VALID_VARIABLE_NAME", "INT", "CHAR", "FLOAT", "STRING", 
                  "ESC", "COMMA", "SEMICOLON", "LPAREN", "RPAREN", "LCURL", 
                  "RCURL", "PLUS", "MINUS", "TIMES", "DIVIDE", "MOD", "ASSIGN", 
                  "EQ", "NEQ", "LTHAN", "GTHAN", "LEQ", "GEQ", "SHIFT_LEFT", 
                  "SHIFT_RIGHT" ]

    grammarFileName = "CrawLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


