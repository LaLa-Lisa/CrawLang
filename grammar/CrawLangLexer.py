# Generated from CrawLang.g4 by ANTLR 4.12.0
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,40,250,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,1,0,1,0,1,0,1,0,1,0,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,2,
        1,3,1,3,1,3,1,3,1,3,1,3,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,6,1,6,
        1,6,1,6,1,7,1,7,1,7,1,7,1,7,1,7,1,7,1,8,1,8,1,8,1,8,1,9,1,9,1,9,
        1,9,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,12,4,12,139,8,
        12,11,12,12,12,140,1,12,1,12,1,13,1,13,1,13,1,13,5,13,149,8,13,10,
        13,12,13,152,9,13,1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,5,
        14,163,8,14,10,14,12,14,166,9,14,1,14,1,14,1,14,1,14,1,14,1,15,1,
        15,5,15,175,8,15,10,15,12,15,178,9,15,1,16,1,16,1,16,3,16,183,8,
        16,1,17,4,17,186,8,17,11,17,12,17,187,1,18,1,18,1,19,4,19,193,8,
        19,11,19,12,19,194,1,19,1,19,4,19,199,8,19,11,19,12,19,200,3,19,
        203,8,19,1,20,1,20,1,21,1,21,1,22,1,22,1,23,1,23,1,24,1,24,1,25,
        1,25,1,26,1,26,1,27,1,27,1,28,1,28,1,29,1,29,1,30,1,30,1,31,1,31,
        1,32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,35,1,35,1,36,1,36,1,36,
        1,37,1,37,1,37,1,38,1,38,1,38,1,39,1,39,1,39,2,150,164,0,40,1,1,
        3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,
        29,15,31,16,33,17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,
        51,26,53,27,55,28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,
        73,37,75,38,77,39,79,40,1,0,5,3,0,9,10,13,13,32,32,2,0,65,90,97,
        122,4,0,48,57,65,90,95,95,97,122,1,0,48,57,1,0,46,46,259,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,
        0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,
        0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,
        0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,
        0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,
        0,63,1,0,0,0,0,65,1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,
        0,73,1,0,0,0,0,75,1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,1,81,1,0,0,0,
        3,86,1,0,0,0,5,91,1,0,0,0,7,95,1,0,0,0,9,101,1,0,0,0,11,104,1,0,
        0,0,13,109,1,0,0,0,15,113,1,0,0,0,17,120,1,0,0,0,19,124,1,0,0,0,
        21,128,1,0,0,0,23,131,1,0,0,0,25,138,1,0,0,0,27,144,1,0,0,0,29,158,
        1,0,0,0,31,172,1,0,0,0,33,182,1,0,0,0,35,185,1,0,0,0,37,189,1,0,
        0,0,39,192,1,0,0,0,41,204,1,0,0,0,43,206,1,0,0,0,45,208,1,0,0,0,
        47,210,1,0,0,0,49,212,1,0,0,0,51,214,1,0,0,0,53,216,1,0,0,0,55,218,
        1,0,0,0,57,220,1,0,0,0,59,222,1,0,0,0,61,224,1,0,0,0,63,226,1,0,
        0,0,65,228,1,0,0,0,67,231,1,0,0,0,69,234,1,0,0,0,71,236,1,0,0,0,
        73,238,1,0,0,0,75,241,1,0,0,0,77,244,1,0,0,0,79,247,1,0,0,0,81,82,
        5,109,0,0,82,83,5,97,0,0,83,84,5,105,0,0,84,85,5,110,0,0,85,2,1,
        0,0,0,86,87,5,99,0,0,87,88,5,104,0,0,88,89,5,97,0,0,89,90,5,114,
        0,0,90,4,1,0,0,0,91,92,5,105,0,0,92,93,5,110,0,0,93,94,5,116,0,0,
        94,6,1,0,0,0,95,96,5,102,0,0,96,97,5,108,0,0,97,98,5,111,0,0,98,
        99,5,97,0,0,99,100,5,116,0,0,100,8,1,0,0,0,101,102,5,105,0,0,102,
        103,5,102,0,0,103,10,1,0,0,0,104,105,5,101,0,0,105,106,5,108,0,0,
        106,107,5,115,0,0,107,108,5,101,0,0,108,12,1,0,0,0,109,110,5,102,
        0,0,110,111,5,111,0,0,111,112,5,114,0,0,112,14,1,0,0,0,113,114,5,
        114,0,0,114,115,5,101,0,0,115,116,5,116,0,0,116,117,5,117,0,0,117,
        118,5,114,0,0,118,119,5,110,0,0,119,16,1,0,0,0,120,121,5,110,0,0,
        121,122,5,111,0,0,122,123,5,116,0,0,123,18,1,0,0,0,124,125,5,97,
        0,0,125,126,5,110,0,0,126,127,5,100,0,0,127,20,1,0,0,0,128,129,5,
        111,0,0,129,130,5,114,0,0,130,22,1,0,0,0,131,132,5,112,0,0,132,133,
        5,114,0,0,133,134,5,105,0,0,134,135,5,110,0,0,135,136,5,116,0,0,
        136,24,1,0,0,0,137,139,7,0,0,0,138,137,1,0,0,0,139,140,1,0,0,0,140,
        138,1,0,0,0,140,141,1,0,0,0,141,142,1,0,0,0,142,143,6,12,0,0,143,
        26,1,0,0,0,144,145,5,47,0,0,145,146,5,42,0,0,146,150,1,0,0,0,147,
        149,9,0,0,0,148,147,1,0,0,0,149,152,1,0,0,0,150,151,1,0,0,0,150,
        148,1,0,0,0,151,153,1,0,0,0,152,150,1,0,0,0,153,154,5,42,0,0,154,
        155,5,47,0,0,155,156,1,0,0,0,156,157,6,13,0,0,157,28,1,0,0,0,158,
        159,5,47,0,0,159,160,5,47,0,0,160,164,1,0,0,0,161,163,9,0,0,0,162,
        161,1,0,0,0,163,166,1,0,0,0,164,165,1,0,0,0,164,162,1,0,0,0,165,
        167,1,0,0,0,166,164,1,0,0,0,167,168,5,13,0,0,168,169,5,10,0,0,169,
        170,1,0,0,0,170,171,6,14,0,0,171,30,1,0,0,0,172,176,7,1,0,0,173,
        175,7,2,0,0,174,173,1,0,0,0,175,178,1,0,0,0,176,174,1,0,0,0,176,
        177,1,0,0,0,177,32,1,0,0,0,178,176,1,0,0,0,179,183,3,35,17,0,180,
        183,3,37,18,0,181,183,3,39,19,0,182,179,1,0,0,0,182,180,1,0,0,0,
        182,181,1,0,0,0,183,34,1,0,0,0,184,186,7,3,0,0,185,184,1,0,0,0,186,
        187,1,0,0,0,187,185,1,0,0,0,187,188,1,0,0,0,188,36,1,0,0,0,189,190,
        7,1,0,0,190,38,1,0,0,0,191,193,7,3,0,0,192,191,1,0,0,0,193,194,1,
        0,0,0,194,192,1,0,0,0,194,195,1,0,0,0,195,202,1,0,0,0,196,198,7,
        4,0,0,197,199,7,3,0,0,198,197,1,0,0,0,199,200,1,0,0,0,200,198,1,
        0,0,0,200,201,1,0,0,0,201,203,1,0,0,0,202,196,1,0,0,0,202,203,1,
        0,0,0,203,40,1,0,0,0,204,205,5,44,0,0,205,42,1,0,0,0,206,207,5,59,
        0,0,207,44,1,0,0,0,208,209,5,40,0,0,209,46,1,0,0,0,210,211,5,41,
        0,0,211,48,1,0,0,0,212,213,5,123,0,0,213,50,1,0,0,0,214,215,5,125,
        0,0,215,52,1,0,0,0,216,217,5,43,0,0,217,54,1,0,0,0,218,219,5,45,
        0,0,219,56,1,0,0,0,220,221,5,42,0,0,221,58,1,0,0,0,222,223,5,47,
        0,0,223,60,1,0,0,0,224,225,5,37,0,0,225,62,1,0,0,0,226,227,5,61,
        0,0,227,64,1,0,0,0,228,229,5,61,0,0,229,230,5,61,0,0,230,66,1,0,
        0,0,231,232,5,33,0,0,232,233,5,61,0,0,233,68,1,0,0,0,234,235,5,60,
        0,0,235,70,1,0,0,0,236,237,5,62,0,0,237,72,1,0,0,0,238,239,5,60,
        0,0,239,240,5,61,0,0,240,74,1,0,0,0,241,242,5,62,0,0,242,243,5,61,
        0,0,243,76,1,0,0,0,244,245,5,60,0,0,245,246,5,60,0,0,246,78,1,0,
        0,0,247,248,5,62,0,0,248,249,5,62,0,0,249,80,1,0,0,0,10,0,140,150,
        164,176,182,187,194,200,202,1,0,1,0
    ]

class CrawLangLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    SPACE = 13
    COMMENT_BLOCK = 14
    COMMENT_LINE = 15
    VALID_VARIABLE_NAME = 16
    LITERAL = 17
    INT = 18
    CHAR = 19
    FLOAT = 20
    COMMA = 21
    SEMICOLON = 22
    LPAREN = 23
    RPAREN = 24
    LCURL = 25
    RCURL = 26
    PLUS = 27
    MINUS = 28
    TIMES = 29
    DIVIDE = 30
    MOD = 31
    ASSIGN = 32
    EQ = 33
    NEQ = 34
    LTHAN = 35
    GTHAN = 36
    LEQ = 37
    GEQ = 38
    SHIFT_LEFT = 39
    SHIFT_RIGHT = 40

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'main'", "'char'", "'int'", "'float'", "'if'", "'else'", "'for'", 
            "'return'", "'not'", "'and'", "'or'", "'print'", "','", "';'", 
            "'('", "')'", "'{'", "'}'", "'+'", "'-'", "'*'", "'/'", "'%'", 
            "'='", "'=='", "'!='", "'<'", "'>'", "'<='", "'>='", "'<<'", 
            "'>>'" ]

    symbolicNames = [ "<INVALID>",
            "SPACE", "COMMENT_BLOCK", "COMMENT_LINE", "VALID_VARIABLE_NAME", 
            "LITERAL", "INT", "CHAR", "FLOAT", "COMMA", "SEMICOLON", "LPAREN", 
            "RPAREN", "LCURL", "RCURL", "PLUS", "MINUS", "TIMES", "DIVIDE", 
            "MOD", "ASSIGN", "EQ", "NEQ", "LTHAN", "GTHAN", "LEQ", "GEQ", 
            "SHIFT_LEFT", "SHIFT_RIGHT" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "SPACE", "COMMENT_BLOCK", 
                  "COMMENT_LINE", "VALID_VARIABLE_NAME", "LITERAL", "INT", 
                  "CHAR", "FLOAT", "COMMA", "SEMICOLON", "LPAREN", "RPAREN", 
                  "LCURL", "RCURL", "PLUS", "MINUS", "TIMES", "DIVIDE", 
                  "MOD", "ASSIGN", "EQ", "NEQ", "LTHAN", "GTHAN", "LEQ", 
                  "GEQ", "SHIFT_LEFT", "SHIFT_RIGHT" ]

    grammarFileName = "CrawLang.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.12.0")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


